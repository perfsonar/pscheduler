Index: b/database/db-change-password.raw
===================================================================
--- a/database/db-change-password.raw	2025-06-30 11:41:34.538446083 -0400
+++ b/database/db-change-password.raw	2025-06-30 11:41:38.577604980 -0400
@@ -9,63 +9,12 @@
     exit 1
 fi
 
-
-TMPBASE=${TMP:=/tmp}/$(basename $0).$$
-
-cleanup()
-{
-    rm -rf $TMPBASE*
-}
-trap cleanup EXIT
-
-
 [ -t 0 -a -t 1 -a -t 2 ] && INTERACTIVE=true || INTERACTIVE=false
 
-
 DATABASE="__DATABASE__"
 ROLE="__ROLE__"
-PASSWORDFILE="__PASSWORDFILE__"
-DSNFILE="__DSNFILE__"
-PGPASSFILE="__PGPASSFILE__"
-
-
-# Generate the new password and write it to the config files
-
-# Make a file that's safe from prying eyes
-protected()
-{
-    rm -rf "$@"
-    touch "$@"
-    chmod 600 "$@"
-    chown pscheduler:root "$@"
-}
-
 
-# Password
-protected "${PASSWORDFILE}"
-(< /dev/urandom tr -dc _A-Za-z0-9 | head -c64 && echo) >> "${PASSWORDFILE}"
-
-# DSN
-protected "${DSNFILE}"
-cat >> "${DSNFILE}" <<EOF
-dbname=${DATABASE} user=${ROLE} password=$(cat "${PASSWORDFILE}")
-EOF
-
-# Pg Password
-protected "${PGPASSFILE}"
-cat >> "${PGPASSFILE}" <<EOF
-*:*:${DATABASE}:${ROLE}:$(cat "${PASSWORDFILE}")
-EOF
-
-
-# Change it in the database
-
-# Don't use protected for this.  We own it.
-ROLESQL="${TMPBASE}.rolesql"
-touch "${ROLESQL}"
-chmod 600 "${ROLESQL}"
-
-cat >> "${ROLESQL}" <<EOF
+su -l -c psql postgres <<EOF >/dev/null
 DO \$\$
 BEGIN
     PERFORM pg_terminate_backend(pg_stat_activity.pid)
@@ -80,11 +29,9 @@
 \$\$ LANGUAGE plpgsql;
 EOF
 
-printf "ALTER ROLE ${ROLE} WITH PASSWORD '" > "${ROLESQL}"
-tr -d "\n" < "${PASSWORDFILE}" >> "${ROLESQL}"
-printf "';\n"  >> "${ROLESQL}"
-
-postgresql-load "${ROLESQL}"
+# Reinstalling the database will generate a new password
+echo SET pscheduler-server/dbconfig-reinstall true | debconf-communicate >/dev/null
+DEBIAN_FRONTEND=noninteractive dpkg-reconfigure --priority=critical pscheduler-server
 
 if $INTERACTIVE
 then
