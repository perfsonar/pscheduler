--- a/daemons/runner	2022-02-03 15:54:20.574564529 -0500
+++ b/daemons/runner	2022-02-03 15:54:41.083727231 -0500
@@ -718,7 +718,7 @@
             # the local database.
 
             try:
-                self.log_debug(f'{self.id}: Merged result: Setting final state.  Succeeded={succeeded}')
+                self.log_debug("%d: Merged result: Setting final state.  Succeeded=%s", self.id, succeeded)
                 db = self._get_db_conn()
                 with db.cursor() as cursor:
                     # TODO: Need to figure out succeeded.
--- a/daemons/scheduler	2022-02-03 15:54:20.574789208 -0500
+++ b/daemons/scheduler	2022-02-03 15:54:41.084317143 -0500
@@ -629,14 +629,14 @@
             [pscheduler.api_run_uuid(run_lead_url)]
         )
         if len(lead_result) != 1:
-            raise RuntimeError(f'Got unexpected lead part data result from database ({len(lead_result)} rows)')
+            raise RuntimeError("Got unexpected lead part data result from database (%d rows)", len(lead_result))
         lead_part_data = next(lead_result)[0]
     except Exception as ex:
-        log.debug(f'{number}: Failed to get lead participant data: {str(ex)}')
+        log.debug("%d: Failed to get lead participant data: %s", number, str(ex))
         return (None, None, None, False, False,
-                f'Failed to get lead run data: {str(ex)}')
+                "Failed to get lead run data: %s".format(str(ex)))
 
-    log_debug(f'{number}: Lead part data: {str(lead_part_data)}')
+    log_debug("%d: Lead part data: %s", number, str(lead_part_data))
     part_data.append(lead_part_data)
 
 
@@ -780,9 +780,9 @@
             """UPDATE run SET state = run_state_pending() WHERE uuid = %s""",
             [pscheduler.api_run_uuid(run_uri)]
         )
-        log_debug(f'{number}: Run state set to pending')
+        log_debug("%d: Run state set to pending", number)
     except Exception as ex:
-        log_debug(f'{number}: Failed to set pending: {str(ex)}')
+        log_debug("%d: Failed to set pending: %s", number, str(ex))
         # This is best-effort; the maintainer will clean up anything that gets left.
         pass
 
@@ -953,7 +953,7 @@
             number, task, key, runs, trynext, anytime, json, participants, debug = row
 
             if number in workers:
-                log.debug(f'Already have a worker for {number}')
+                log.debug("Already have a worker for %d", number)
                 continue
 
             try:
