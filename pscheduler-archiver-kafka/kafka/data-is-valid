#!/usr/bin/env python3
#
# Validate data for kafka
#

import pscheduler

try:
    json = pscheduler.json_load(max_schema=1)
except ValueError as ex:
    pscheduler.succeed_json({"valid": False, "error": str(ex)})

data_validator = {
    # Data validation json object
    "type": "object",
    "properties": {
        "topic": {"$ref": "#/pScheduler/String"},
        "server": {"$ref": "#/pScheduler/String"},
        "archiver-id": {"$ref": "#/pScheduler/String"},
        "security-protocol": {"$ref": "#/pScheduler/String"},
        "_ssl-cafile": {"$ref": "#/pScheduler/String"},
        "_ssl-certfile": {"$ref": "#/pScheduler/String"},
        "_ssl-keyfile": {"$ref": "#/pScheduler/String"},
        "_ssl-password": {"$ref": "#/pScheduler/String"},
        "ssl-checkhostname": {"$ref": "#/pScheduler/Boolean"},
        "kafka-retries": {"$ref": "#/pScheduler/Integer"},
        "retry-policy": {"$ref": "#/pScheduler/RetryPolicy"},
    },
    "additionalProperties": False,
    "required": ["topic", "server"],
}

valid, error = pscheduler.json_validate(json, data_validator)

if not valid:
    pscheduler.succeed_json({"valid": False, "error": error})

pscheduler.succeed_json({"valid": True})
