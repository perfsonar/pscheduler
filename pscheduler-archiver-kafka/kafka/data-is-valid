#!/usr/bin/env python3
#
# Validate data for kafka
#

import pscheduler

try:
    json = pscheduler.json_load(max_schema=1)
except ValueError as ex:
    pscheduler.succeed_json({
        "valid": False,
        "error": str(ex)
        })

data_validator = {
    #Data validation json object
    "type": "object",
    "properties": {
        "topic": {"$ref": "#/pScheduler/String"},
        "server": {"$ref": "#/pScheduler/String"},
        "archiver_id": {"$ref": "#/pScheduler/String"},
        "security_protocol": {"$ref": "#/pScheduler/String"},
        "ssl_cafile": {"$ref": "#/pScheduler/String"},
        "ssl_certfile": {"$ref": "#/pScheduler/String"},
        "ssl_keyfile": {"$ref": "#/pScheduler/String"},
        "ssl_password": {"$ref": "#/pScheduler/String"},
        "ssl_checkhostname": {"$ref": "#/pScheduler/Boolean"},
        "kafka_retries": {"$ref": "#/pScheduler/Integer"},
        "retry-policy": { "$ref": "#/pScheduler/RetryPolicy" }
    },
    "additionalProperties": False,
    "required": ["topic", "server", "archiver_id"]
}

valid, error = pscheduler.json_validate(json, data_validator)

if not valid:
    pscheduler.succeed_json({
        "valid": False,
        "error": error
        })

pscheduler.succeed_json({ "valid": True })
