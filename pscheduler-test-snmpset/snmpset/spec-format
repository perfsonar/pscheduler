#!/usr/bin/env python3
#
# Format a spec
#

import pscheduler

from validate import spec_is_valid
from validate import MAX_SCHEMA

TEMPLATE='''
{% if _mime_type == 'text/plain' %}

Host ............... {{ unspec(host) }}
Host Node .......... {{ unspec(get('host-node')) }}
Destination ........ {{ unspec(dest) }}
Version ............ {{ unspec(version) }}
OID ................ {{ oid | join(", ") }}
Protocol ........... {{ unspec(protocol) }}
Variable Type ...... {{ unspec(vartype) }}
Variable Value ..... {{ unspec(varvalue) }}
Timeout ............ {{ unspec(timeout) }}
{% if version == '3' -%}
Security Name ...... {{ unspec(get('security-name')) }}
Auth Protocol ...... {{ unspec(get('auth-protocol')) }}
Privacy Protocol ... {{ unspec(get('priv-protocol')) }}
Security Level ..... {{ unspec(get('security-level')) }}
Context .............{{ unspec(context) }}
{%- endif -%}

{% elif _mime_type == 'text/html' %}

<table>
<tr><td>Host</td><td>{{ unspec(host) }}</td></tr>
<tr><td>Host Node</td><td>{{ unspec(get('host-node')) }}</td></tr>
<tr><td>Destination</td><td>{{ unspec(dest) }}</td></tr>
<tr><td>Version</td><td>{{ unspec(version) }}</td></tr>
<tr><td>OID</td><td>{{ oid | join(", ") }}</td></tr>
<tr><td>Protocol</td><td>{{ unspec(protocol) }}</td></tr>
<tr><td>Variable Type</td><td>{{ unspec(vartype) }}</td></tr>
<tr><td>Variable Value</td><td>{{ unspec(varvalue) }}</td></tr>
<tr><td>Timeout</td><td>{{ unspec(timeout) }}</td></tr>
{% if version == '3' -%}
<tr><td>Security Name</td><td>{{ unspec(get('security-name')) }}</td></tr>
<tr><td>Auth Protocol</td><td>{{ unspec(get('auth-protocol')) }}</td></tr>
<tr><td>Privacy Protocol</td><td>{{ unspec(get('priv-protocol')) }}</td></tr>
<tr><td>Security Level</td><td>{{ unspec(get('security-level')) }}</td></tr>
<tr><td>Context</td><td>{{ unspec(context) }}</td></tr>
{%- endif -%}
</table>

{% else %}

{{ error('Unsupported MIME type "' + _mime_type + '"') }}

{% endif %}
'''

pscheduler.spec_format_method(TEMPLATE, max_schema=MAX_SCHEMA, validator=spec_is_valid)
