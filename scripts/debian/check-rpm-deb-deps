#!/usr/bin/perl -w
#
# This script test if all dependencies in Debian packages are the same
# as the dependencies in RPM packages.

use v5.10;
use strict;
use warnings;

# The dependencies to check and the list of packages to check for each dependency
my %deps_list = (
    'python-pscheduler' => ['pscheduler-archiver-esmond', 'pscheduler-archiver-http', 'pscheduler-archiver-rabbitmq', 'pscheduler-core', 'pscheduler-server', 'pscheduler-test-clock', 'pscheduler-test-disk-to-disk', 'pscheduler-test-dns', 'pscheduler-test-http', 'pscheduler-test-idle', 'pscheduler-test-idlebgm', 'pscheduler-test-idleex', 'pscheduler-test-latency', 'pscheduler-test-latencybg', 'pscheduler-test-netreach', 'pscheduler-test-rtt', 'pscheduler-test-simplestream', 'pscheduler-test-snmpget', 'pscheduler-test-snmpgetbgm', 'pscheduler-test-snmpset', 'pscheduler-test-throughput', 'pscheduler-test-trace', 'pscheduler-tool-curl', 'pscheduler-tool-dnspy', 'pscheduler-tool-globus', 'pscheduler-tool-iperf2', 'pscheduler-tool-iperf3', 'pscheduler-tool-net-snmp-set', 'pscheduler-tool-nmapreach', 'pscheduler-tool-nuttcp', 'pscheduler-tool-owping', 'pscheduler-tool-paris-traceroute', 'pscheduler-tool-ping', 'pscheduler-tool-powstream', 'pscheduler-tool-psclock', 'pscheduler-tool-psurl', 'pscheduler-tool-pysnmp', 'pscheduler-tool-simplestreamer', 'pscheduler-tool-sleep', 'pscheduler-tool-sleepbgm', 'pscheduler-tool-snooze', 'pscheduler-tool-tracepath', 'pscheduler-tool-traceroute', 'pscheduler-tool-twping'],
    'pscheduler-server' => [ 'pscheduler-archiver-bitbucket', 'pscheduler-archiver-esmond', 'pscheduler-archiver-failer', 'pscheduler-archiver-http', 'pscheduler-archiver-kafka', 'pscheduler-archiver-rabbitmq', 'pscheduler-archiver-snmptrap', 'pscheduler-archiver-syslog', 'pscheduler-context-changefail', 'pscheduler-context-changenothing', 'pscheduler-context-linuxnns', 'pscheduler-context-linuxvrf', 'pscheduler-server', 'pscheduler-test-clock', 'pscheduler-test-disk-to-disk', 'pscheduler-test-dns', 'pscheduler-test-http', 'pscheduler-test-idle', 'pscheduler-test-idlebgm', 'pscheduler-test-idleex', 'pscheduler-test-latency', 'pscheduler-test-latencybg', 'pscheduler-test-netreach', 'pscheduler-test-rtt', 'pscheduler-test-simplestream', 'pscheduler-test-snmpget', 'pscheduler-test-snmpgetbgm', 'pscheduler-test-snmpset', 'pscheduler-test-throughput', 'pscheduler-test-trace', 'pscheduler-tool-bwctliperf2', 'pscheduler-tool-bwctliperf3', 'pscheduler-tool-bwctlping', 'pscheduler-tool-bwctltracepath', 'pscheduler-tool-bwctltraceroute', 'pscheduler-tool-curl', 'pscheduler-tool-dnspy', 'pscheduler-tool-globus', 'pscheduler-tool-iperf2', 'pscheduler-tool-iperf3', 'pscheduler-tool-net-snmp-set', 'pscheduler-tool-nmapreach', 'pscheduler-tool-nuttcp', 'pscheduler-tool-owping', 'pscheduler-tool-paris-traceroute', 'pscheduler-tool-ping', 'pscheduler-tool-powstream', 'pscheduler-tool-psclock', 'pscheduler-tool-psurl', 'pscheduler-tool-pysnmp', 'pscheduler-tool-simplestreamer', 'pscheduler-tool-sleep', 'pscheduler-tool-sleepbgm', 'pscheduler-tool-snooze', 'pscheduler-tool-tracepath', 'pscheduler-tool-traceroute', 'pscheduler-tool-twping']
);
my $count = 0;

for my $dep ( keys %deps_list ) {
    for my $package ( @{$deps_list{$dep}} ) {
        my ($deb_control,$rpm_dep_ver,$deb_dep_ver);
        my $spec_file = "$package/$package.spec";
        if (-e "$package/debian/control") {
            $deb_control = "$package/debian/control";
        } else {
            $deb_control = "$package/$package/debian/control";
        }
        #print "Checking $dep dependency in $spec_file is the same as in $deb_control\n";
        open(RPM, "<", $spec_file) or die "Can't open RPM $spec_file: $!";
        while (<RPM>) {
            if (/^Requires:[[:space:]]*$dep >= ([0-9\.]+)[[:space:]]*$/) {
                $rpm_dep_ver = $1;
                last;
            }
        }
        close(RPM);
        open(DEB, "<", $deb_control) or die "Can't open DEB $deb_control: $!";
        while (<DEB>) {
            if (/.* $dep \(>= ([0-9\.]+)[~]?\).*$/) {
                $deb_dep_ver = $1;
                last;
            }
        }
        close(DEB);
        if ($rpm_dep_ver) {
            if ($rpm_dep_ver eq $deb_dep_ver) {
                print ".";
            } else {
                print "\nCheck that $dep dependency in $package for RPM ($rpm_dep_ver) and DEB ($deb_dep_ver) are matching.\n";
                $count++;
            }
        }
    }
}

if ($count > 0) {
    print "\nYou should correct the dependencies above.\n";
} else {
    print "OK!\n";
}

