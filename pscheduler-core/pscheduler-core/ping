#!/usr/bin/env python3
#
# Ping another pScheduler host to see if it responds
#

import argparse
import pscheduler

pscheduler.set_graceful_exit()


#
# Gargle the arguments
#

arg_parser = argparse.ArgumentParser(
    usage="Usage: %prog [ HOST ]",
    epilog=
"""
Example:

  ping
      Check on the local host

  ping perfsonar6.example.org
      Check on the host at perfsonar6.example.org
""",
    formatter_class=argparse.RawTextHelpFormatter
    )

arg_parser.add_argument("--bind",
                      help="Make the request from the provided address",
                      default=None,
                      action="store", type=str,
                      dest="bind")
arg_parser.add_argument("--quiet", "-q",
                      help="Run without any output",
                      action="store_true", default=False,
                      dest="quiet")
arg_parser.add_argument("--timeout", "-W",
                      help="How long to wait for the server to respond, in seconds (default 5)",
                      default=5,
                      action="store", type=int,
                      dest="timeout")

arg_parser.add_argument("host",
                        help="pScheduler host to ping",
                        nargs="?")

args = arg_parser.parse_args()

if not args.host:
    arg_parser.print_usage()
    pscheduler.fail()

if args.timeout <= 0:
    pscheduler.fail("Timeout must be >= 0")

host = args.host

up, reason = pscheduler.api_ping(host, timeout=args.timeout,
                                 bind=args.bind)

if up:
    pscheduler.succeed(reason)

pscheduler.fail(reason)
