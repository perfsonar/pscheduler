{

    "#": "-------------------------------------------------------------------",
    "#": "               pScheduler Sample Limit Configuration               ",
    "#": "                                                                   ",
    "#": "                                                                   ",
    "#": "Shows how to use the 'ipcidrlist' identifier.                      ",
    "#": "                                                                   ",
    "#": "THIS FILE IS FOR EXAMPLE ONLY AND SHOULD NOT BE USED IN PRODUCTION.",
    "#": "-------------------------------------------------------------------",

    "schema": 1,

    "#": "-------------------------------------------------------------------",
    "#": "IDENTIFIERS:  WHO'S ASKING?                                        ",
    "#": "                                                                   ",
    "#": "These identify who's asking to run the test.  One requester can    ",
    "#": "map to zero or more identifiers.                                   ",
    "#": "-------------------------------------------------------------------",

    "identifiers": [
	{
	    "#": "In plain English:  Identify all requests originating from  ",
	    "#": "one of the addresses or networks in a list.                ",

	    "name": "trusted-requester-ips",
	    "description": "Requests from IPs we trust",
	    "type": "ip-cidr-list",
	    "data": {
		"#": "List of CIDR blocks to be matched for this identifier  ",
		"cidrs": [
		    "203.0.113.62",
		    "192.168.19.0/24",
		    "192.168.84.0/24",
		    "2001:db8::1234",
		    "fc00:1bad:cafe::/48",
		    "fc00:dead:beef::/48"
		    ]
	    }
	}
    ],


    "#": "-------------------------------------------------------------------",
    "#": "CLASSIFIERS:  HOW DO WE CLASSIFY THE IDENTIFIERS?                  ",
    "#": "                                                                   ",
    "#": "These collect identifiers into groups.                             ",
    "#": "-------------------------------------------------------------------",

    "classifiers": [
	{
	    "#": "In plain English:  Groups the 'trusted-requester-ips'      ",
	    "#": "identifier into a 'trusted-requesters' classification.     ", 

	    "name": "trusted-requesters",
	    "description": "Requesters we trust",
	    "identifiers": [ "trusted-requester-ips" ]
	}
    ],


    "#": "-------------------------------------------------------------------",
    "#": "LIMITS:  WHAT ARE THE RESTRICTIONS?                                ",
    "#": "                                                                   ",
    "#": "These are comparisons made against the type of test being proposed,",
    "#": "the paramaters for the run and when it is proposed to be run.      ",
    "#": "-------------------------------------------------------------------",

    "limits": [
	{
	    "#": "In plain English:  Any task being tested against this limit",
	    "#": "will always meet with approval.                            ",

	    "name": "always",
	    "description": "Always passes",
	    "type": "pass-fail",
	    "data": {
		"pass": true
	    }
	}
    ],

    "#": "-------------------------------------------------------------------",
    "#": "APPLICATIONS:  TO WHOM DO WE APPLY THE LIMITS?                     ",
    "#": "                                                                   ",
    "#": "These are processed in order until one passes all of the           ",
    "#": "requirements.  The run will be rejected if one fails with          ",
    "#": "stop-on-failure set to true or none of them passes.                ",
    "#": "-------------------------------------------------------------------",

    "applications": [
	{
	    "#": "In plain English:  Allow any trusted requester to run      ",
	    "#": "anything they want.  This is the only application, so any  ",
	    "#": "untrusted requester will fall off the bottom and be denied.",

	    "description": "Requests from trusted requesters",
	    "classifier": "trusted-requesters",
	    "apply": [
		{ "require": "all", "limits": [ "always" ] }
	    ]
	}
    ]

}
